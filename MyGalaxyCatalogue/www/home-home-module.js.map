{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AAER;AAgBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACtB3B,6HAA6H,0tBAA0tB,cAAc,iIAAiI,cAAc,+RAA+R,MAAM,sQAAsQ,MAAM,yBAAyB,UAAU,gIAAgI,iBAAiB,uO;;;;;;;;;;;ACAztD,8BAA8B,8BAA8B,EAAE,iBAAiB,6DAA6D,mEAAmE,EAAE,cAAc,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7M;AACK;AAES;AAOhE;IAIE,kBACU,WAAwB,EACxB,eAAgC,EAChC,aAA4B;QAF5B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QALtC,UAAK,GAAW,EAAE,CAAC;IAKuB,CAAC;IAE3C,2BAAQ,GAAR;IAEA,CAAC;IAED,mCAAgB,GAAhB;QAAA,iBAEC;QADC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,CAAC;IAC9D,CAAC;IAEK,+BAAY,GAAlB,UAAmB,QAAgB,EAAE,EAAU;;;;;;4BAE/B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,iBAAiB;4BACzB,OAAO,EAAE,uCAAuC,GAAG,QAAQ,GAAG,yBAAyB;4BACvF,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,UAAU;oCAChB,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE,UAAC,IAAI;oCACd,CAAC;iCACF,EAAE;oCACD,IAAI,EAAE,SAAS;oCACf,OAAO,EAAE;wCACP,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAClC,cAAM,YAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CACpC,cAAI,IAAI,YAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAAC,EADtB,CACsB,CAC7B,CAAC;oCACJ,CAAC;iCACF;6BACF;yBACF,CAAC;;wBApBI,KAAK,GAAG,SAoBZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IACD,2BAAQ,GAAR,UAAS,EAAU;QACjB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;IA5CU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMuB,kEAAW;YACP,8DAAe;YACjB,4DAAa;OAP3B,QAAQ,CA8CpB;IAAD,eAAC;CAAA;AA9CoB","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-title>\\n      <img style=\\\"vertical-align: middle;\\\" alt=\\\"logo\\\" height=\\\"40\\\" src=\\\"../../assets/logo.png\\\">\\n      My Galaxy Catalogue\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button href=\\\"/edit\\\" routerDirection=\\\"forward\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding >\\n  \\n  <ion-list lines=\\\"full\\\">\\n    <ion-item  *ngFor=\\\"let t of todos\\\">\\n\\n      <ion-card >\\n        <ion-card-header>\\n          <img *ngIf=\\\"t.image !== null\\\" (click)=\\\"editTodo(t.id)\\\" [src]=\\\"t.image\\\">\\n          <img *ngIf=\\\"t.image === null\\\" (click)=\\\"editTodo(t.id)\\\" src=\\\"../../assets/productosinfoto.png\\\">\\n\\n          <ion-card-title (click)=\\\"editTodo(t.id)\\\">{{ t.producto }}</ion-card-title>\\n          <ion-card-subtitle (click)=\\\"editTodo(t.id)\\\" text-center>\\n\\n            <strong>\\n              {{ t.category }}\\n\\n              <ion-icon *ngIf=\\\"t.category === 'Objetos'\\\" name=\\\"cube\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"t.category === 'Servicios'\\\" name=\\\"swap\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"t.category === 'Otros'\\\" name=\\\"medical\\\"></ion-icon>\\n\\n              &nbsp;&nbsp;Estado:\\n              <ion-icon *ngIf=\\\"t.stars === 1\\\" name=\\\"sad\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"t.stars === 2\\\" name=\\\"heart-half\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"t.stars === 3\\\" name=\\\"happy\\\"></ion-icon>\\n\\n              &nbsp;&nbsp;Precio:\\n              {{t.precio}}€\\n            </strong>\\n\\n          </ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          {{ t.description }}\\n          <br>\\n          <ion-icon (click)=\\\"deleteDialog(t.producto, t.id)\\\" name=\\\"trash\\\" color=\\\"dark\\\"></ion-icon>\\n        </ion-card-content>\\n\\n      </ion-card>\\n\\n\\n\\n\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\"","module.exports = \"ion-header {\\n  background-color: #A23C4B; }\\n\\nion-content {\\n  background: -webkit-gradient(left top, #A23C4B, #ff9068);\\n  background: linear-gradient(to bottom right, #A23C4B, #ff9068); }\\n\\nion-card {\\n  background-color: #a9d84d; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../services/todo.service';\nimport { Todo } from '../interfaces/todo';\nimport { AlertController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  todos: Todo[] = [];\n\n  constructor(\n    private todoService: TodoService,\n    private alertController: AlertController,\n    private navController: NavController) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.todoService.getTodos().then(data => this.todos = data);\n  }\n\n  async deleteDialog(producto: string, id: number) {\n\n    const alert = await this.alertController.create({\n      header: 'Borrar producto',\n      message: '¿Quiere eliminar el producto <strong>' + producto + '</strong> del catálogo?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n          }\n        }, {\n          text: 'Aceptar',\n          handler: () => {\n            this.todoService.deleteTodo(id).then(\n              () => this.todoService.getTodos().then(\n                data => this.todos = data)\n            );\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  editTodo(id: number) {\n    this.navController.navigateForward('/edit/' + id);\n  }\n\n}\n"],"sourceRoot":""}